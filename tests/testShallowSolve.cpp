#include <iostream>
#include <sstream>

#include "../solver.hpp"

#include "checkEqual.hpp"

std::string StringShallowSolve(const std::string& sudoku)
{
    std::istringstream iss(sudoku);
    State s;
    iss >> s;

    Solver solver;
    State solution = solver.ShallowSolve(s);

    std::ostringstream oss;
    oss << solution;

    return oss.str();
}

int main()
{
    std::array<std::array<std::string, 2>, 4> solverPairs = {{
        {{
            "123456780000000000000000000000000000000000000000000000000000000000000000000000000",
            "123456789000000000000000000000000000000000000000000000000000000000000000000000000"
        }},
        {{
            "000000000000000000000000000000000000000000000000000000000000000000000000123456780",
            "000000000000000000000000000000000000000000000000000000000000000000000000123456789"
        }},
        {{
            "100000000200000000300000000400000000500000000600000000700000000800000000000000000",
            "100000000200000000300000000400000000500000000600000000700000000800000000900000000"
        }},
        {{
            "092030071005090836340107200000304725037029100284700003109240060800573900470000582",
            "692835471715492836348167259961384725537629148284751693159248367826573914473916582"
        }}
    }};

    for (auto& pair : solverPairs)
    {
        CheckEqual(__LINE__, StringShallowSolve(pair[0]), pair[1]);
    }

    return 0;
}
